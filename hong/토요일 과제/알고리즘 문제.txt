class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target)
    {
        for(int i=0;i<nums.size();i++)
        {
            for(int j = i +1;j<nums.size();j++)
            {
                if(nums[i]+nums[j] == target)
                {
                   return {i,j};
                }
            }
        }
        return {};
    }
};
값이 들어오면
nums 안에서의 합이 target의 값이랑 같아야 하기 때문에
순차적으로 값을 확인하며 2중 for문을 사용하여 하나씩 비교해 나가보는 방법을 생각했음
그리고 조건을 걸어 같으면 값을 반화 하는 형식으로 해결

g : 출발점으로 부터 얼마나 떨어져 있는가? 또는 이동에 드는 비용
h : 목적지로 부터 얼마나 떨어져 있는가?
f : G + H;

방향 선택은 f 값이 젤 작은애

g 14 h 56
    f 70
f값이 같으면 h값이 작은걸 먼저 선택

DFS
DFS






asdfsadf























